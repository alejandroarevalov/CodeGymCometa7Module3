package com.codegym.concurrencia;

public class EjemploVolatile {
    private volatile boolean enEjecucion = true; // ðŸ”¥ Necesario para que el cambio sea visible a todos los hilos

    public void ejecutar() {
        System.out.println("Hilo de trabajo iniciado...");

        while (enEjecucion) { // ðŸ”¥ Sin volatile, este hilo podrÃ­a NO ver el cambio de enEjecucion
            // SimulaciÃ³n de trabajo
        }

        System.out.println("Hilo de trabajo detenido.");
    }

    public void detener() {
        System.out.println("Deteniendo hilo de trabajo...");
        enEjecucion = false; // ðŸ”¥ Sin volatile, este cambio podrÃ­a no ser visible para el otro hilo
    }

    public static void main(String[] args) throws InterruptedException {
        EjemploVolatile ejemplo = new EjemploVolatile();

        // Hilo que ejecuta un bucle infinito mientras enEjecucion sea true
        Thread hiloTrabajo = new Thread(ejemplo::ejecutar, "Hilo 1");
        hiloTrabajo.start();

        // Esperar 2 segundos y luego intentar detener el hilo
        Thread.sleep(2000);
        ejemplo.detener();
    }
}